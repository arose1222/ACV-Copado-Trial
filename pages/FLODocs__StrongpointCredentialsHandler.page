<apex:page showHeader="true" sidebar="false" docType="html-5.0"  controller="FLODocs.StrongpointCredentialsHandlerController">
	
<html xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">

	<apex:includeScript value="{!URLFOR($Resource.FLODocs__FLOJQuery, '/jquery-ui-1.12.1.custom/external/jquery/jquery.js')}" />
    <apex:includescript value="{!URLFOR($Resource.FLODocs__FlodocResources, 'js/jquery.dataTables.min.js')}" />
    <apex:stylesheet value="{!URLFOR($Resource.FLODocs__FlodocResources, 'css/jquery.dataTables.css')}" />
	<apex:stylesheet value="{!URLFOR($Resource.FLODocs__SLDS22, 'assets/styles/salesforce-lightning-design-system.css')}" />

    <style type="text/css">
        .zen .zen-tabMenu a {
            color: #353535 !important;
            font-family: Arial,Helvetica,sans-serif !important;
        }
        html {
            line-height: 1;
            background: none;
            box-sizing: initial;
        }
        .material-switch > input[type="checkbox"] {
            display: none;
        }
        .material-switch > label {
            cursor: pointer;
            height: 0px;
            position: relative;
            width: 40px;
        }
        .material-switch > label::before {
            background: rgb(0, 0, 0);
            box-shadow: inset 0px 0px 10px rgba(0, 0, 0, 0.5);
            border-radius: 8px;
            content: '';
            height: 16px;
            margin-top: -8px;
            position:absolute;
            opacity: 0.3;
            transition: all 0.4s ease-in-out;
            width: 40px;
        }
        .material-switch > label::after {
            background: rgb(255, 255, 255);
            border-radius: 16px;
            box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.3);
            content: '';
            height: 24px;
            left: -4px;
            margin-top: -8px;
            position: absolute;
            top: -4px;
            transition: all 0.3s ease-in-out;
            width: 24px;
        }
        .material-switch > input[type="checkbox"]:checked + label::before {
            background: inherit;
            opacity: 0.5;
        }
        .material-switch > input[type="checkbox"]:checked + label::after {
            background: inherit;
            left: 20px;
        }

        .slds-dropdown--inverse {
            background: #FFF !important;/*#FFC55A;*/
            border-top: 3px solid orange !important;
            border-left: 0 solid !important;
            border-right: 0 solid !important;
            border-bottom: 0 solid !important;
            margin-top: -3px !important;
            font-family: 'Salesforce Sans',Arial,sans-serif;
        }
        .bPageBlock {
            border-top: 0px solid !important;
        }
        .pbBody {
            margin: 0 !important;
        }
        .slds-dropdown__item a {
            text-decoration: none;
            color: #747474 !important;
            /*font-weight: bold;*/
            font-family: 'Salesforce Sans',Arial,sans-serif;
        }
        .slds-dropdown-trigger button.slds-button {
            color: #747474 !important;
        }
        .pbSubheader {
            background-color: #f7f9fb !important;
            padding: 8px !important;
            color: #222 !important;
            border-bottom: 1px solid #d8dde6 !important;
        }
        .bPageBlock {
            border: 0 !important;
            background: #FFF !important;
        }
        .slds-dropdown {
            margin-top: 0;
            border-radius: 0 0 0.25rem 0.25rem;
        }
        ol li {
            margin-left: 0;
        }
        .information p {
            margin: 10px;
        }
        .slds-button--brand  {
            padding-top: 0 !important;
            padding-bottom: 0 !important;
            padding-left: 1rem !important;
            padding-right: 1rem !important;
            background-color: #0070d2 !important;
            background: #0070d2 !important;
            border: 1px solid #0070d2 !important;
            color: white !important;
        }
        .message.errorM3 {
            display:none;
        }
        .schedulerWrapper .slds-form-element {
            display: inline-block;
            margin-right: 20px;
            min-width: 140px;
        }
        .dateInput {
            min-height: 23px;
            line-height: 1;
        }
        div.slds-input input {
            background-color: white;
            color: #16325c;
            border: 1px solid #d8dde6;
            border-radius: 0.25rem;
            width: 100%;
            transition: border 0.1s linear, background-color 0.1s linear;
            display: inline-block;
            padding: 0 1rem 0 0.75rem;
            line-height: 1.875rem;
            min-height: calc(1.875rem + (1px * 2));
            max-width: 250px;
            margin-left: 20px
        }
        div.slds-input select {
            background-color: white;
            color: #16325c;
            border: 1px solid #d8dde6;
            border-radius: 0.25rem;
            width: 100%;
            transition: border 0.1s linear, background-color 0.1s linear;
            display: inline-block;
            padding: 0 1rem 0 0.75rem;
            line-height: 1.875rem;
            min-height: calc(1.875rem + (1px * 2));
            max-width: 200px;
        }
        div.slds-input {
            border: 0;
        }
        button.mainMenuButton:hover div {
            display: block !important;
        }
        li.mainMenuButton:hover div {
            display: block !important;
        }

        span.submenuList {
            margin-left: 200px;
            margin-top: -34px !important;
            box-shadow: -1px 2px 2px 1px rgba(0,0,0,0.2);
        }

        li.subMenuButton:hover span.subMenuList {
            display: block !important;
            margin-left: 200px;
            margin-top: -34px !important;
            box-shadow: -1px 2px 2px 1px rgba(0,0,0,0.2);
        }

        li.subMenuButton {
            min-width: 200px;
        }

        .slds-tabs--default__item {
            margin-left: 1.5em !important;
        }

        .slds-tabs--default__item.slds-active:after, .slds-tabs--default__item.slds-is-active:after {
            background-color: orange !important;
        }
        ul > li.slds-tabs--default__item {
            margin-bottom: 0;
        }
        .slds-trial-header {
            height: 40px !important;
            padding: 0 !important;
        }

        .slds-trial-header a:not(.slds-button--neutral):hover, .slds-trial-header a:not(.slds-button--neutral):focus, .slds-trial-header button:not(.slds-button--neutral):hover, .slds-trial-header button:not(.slds-button--neutral):focus {
            color: currentColor;
        }

        ul.flodocslinksUl {
            font-size: 1rem;
            font-family: 'Salesforce Sans',Arial,sans-serif;
            padding: 20px 0;
        }

        ul.flodocslinksUl  li{
            padding: 5px 0;
        }

        /*ul.flodocslinksUl li ul {
            visibility: hidden;
            opacity: 0;
            transition: visibility 0s, opacity 2s linear;
        }*/

        ul.flodocslinksUl li:hover ul {
            /*display:block !important;
            visibility: visible;
            opacity: 1;*/
        }
        #collapseall {
            font-size: 1rem;
            font-family: 'Salesforce Sans',Arial,sans-serif;
        }
        #expandall {
            font-size: 1rem;
            font-family: 'Salesforce Sans',Arial,sans-serif;
        }
        .successMessage {
            padding: 5px;
            text-align: center;
            background-color: #4bca81;
            color: white;
            font-weight: bold;
        }
        .errorMessage {
            padding: 5px;
            text-align: center;
            background-color: #d4504c;
            color: white;
            font-weight: bold;
        }

        .slds-dropdown__list li:hover{
            background-color: orange;
        }

        .toTheRight {
            float: right;
        }

        .toTheLeft {
            float: left;
        }

        td.left {
            width: 85px !important;
            height: auto;
        }
        td.left div{
            width: 85px !important;
        }
        img#phHeaderLogoImage {
            width: 85px;
            height: 55px;
        }
    </style>
		
    <style>
		div.wrapper {
			text-align: center;
		}
		div.wrapper div {
			margin-top: 5px;
		}
		div.wrapper h1 {
			font-size: 12pt;
		}
		div.filters {
			margin-top: 10px;
		}
		div.filters div {
			margin-bottom: 5px;
			font-weight: bold;
		}
		.connectionMessage { 
			color: blue; font-weight: strong;
		}
		.centerContent {
			text-align: center;
		}
		span.modalLink {
			text-decoration: none;
			color: blue;
			font-size: 12pt;
			cursor: pointer;
			font-weight: bold;
		}
		div.remoteSiteMessage {
			background-color: #ffc;
			padding: 5px;
			margin: 5px;
		}
		.bPageBlock {
			border-top: 4px solid #c9af82 !important;
		}
		.pbSubheader {
			background-color: #c9af82 !important;
		}
		.requiredSpan {
			background-color: #c00;
		    padding: 3px 1px;
		    margin-right: 1px;
		}
		input {
			max-width: 540px;
		}
		
		a.slds-input {
			max-width: 50px;
    		border: 0;
		}
		select.slds-input {
			max-width: 540px;
		}
		td.buttonCell {
			width: 40px;
		}
		legend {
			border-bottom: 1px solid orange;
		    width: 100%;
		    margin: 15px 0;
		    padding: 15px 0;
		    font-size: 1rem !important;
		    font-family: 'Salesforce Sans',Arial,sans-serif;
		    font-weight: 300 !important;
		}
		span.required {
			color:red; 
			font-weight: bold;
			font-size: 0.85rem;
		}
		.slds-button--brand  {
			padding-top: 0 !important;
			padding-bottom: 0 !important;
			padding-left: 1rem !important;
   			padding-right: 1rem !important;
   			background-color: #0070d2 !important;
   			background: #0070d2 !important;
		    border: 1px solid #0070d2 !important;
		    color: white !important;
		}
		.message.errorM3 {
			border: 0;
    		margin: 0;
    		/*display: none; remember to remove this*/
		}
		div.messageText span h4 {
			font-family: 'Salesforce Sans',Arial,sans-serif !important;
		}

		table.messageTable tbody tr td span ul {
			font-family: 'Salesforce Sans',Arial,sans-serif !important;
		}

		.pbSubheader {
			background-color: orange!important;
		    padding: 8px !important;
		    color: #222 !important;
		}
		.bPageBlock {
			border: 0 !important;
    		background: #FFF !important;
		 }
		 body .pbBody table.list tr.headerRow td, body .pbBody table.list tr.headerRow th {
		    background: #FFF;
		    border-width: 0;
		    /* border-color: #e0e3e5; */
		    color: #000;
		    font-size: .9em;
		    font-weight: 300;
		    padding: 0.5rem;
		}
		table.list {
		    border: 0;
		    border-bottom: 1px solid #e0e3e5;
		    border-top: 1px solid #e0e3e5;
		}
		.pageWrapper {
			padding: 10px 40px;
		}
		.paginationControlls {
			text-align: center;
		    border: 1px solid #ededed;
		    margin-top: -17px;
		    padding: 20px;
		}
		.paginationLinks {
			color: #0070d2 !important;
    		font-weight: bold;
		}
		td.left {
            width: 85px !important;
            height: auto;
        }
        td.left div{
            width: 85px !important;
        }
        img#phHeaderLogoImage {
            width: 85px;
            height: 55px;
        }

        div.successConnection {
        	padding: 5px;
		    text-align: center;
		    background-color: #4bca81;
		    color: white;
		    font-weight: bold;
		    margin-bottom: 10px;
        }

        div.errorConnection {
        	padding: 5px;
		    text-align: center;
		    background-color: #d68184;
		    color: white;
		    font-weight: bold;
		    margin-bottom: 10px;
        }
	</style>

    <div class="slds" style="height: 500px">

		<apex:form >

		<c:StrongpointMenu />

		<div class="slds-page-header">
          <div class="slds-grid">
            <div class="slds-col slds-has-flexi-truncate">
              <div class="slds-media slds-no-space slds-grow">
                <div class="slds-media__figure">
                  <img src="{!$Resource.FLO_Logo}" style="max-width: 80px;"/>
                </div>
                <div class="slds-media__body">
                  <p class="slds-text-title--caps slds-line-height--reset">Strongpoint Credentials Handler</p>
                  <h1 class="slds-page-header__title slds-m-right--small slds-align-middle slds-truncate" title="this should match the Record Title">Here you can add, edit and sync your credentials</h1>
                </div>
              </div>
            </div>
          </div>
        </div>
        
        <fieldset class="slds-form--compound">
                <legend class="slds-form-element__label slds-text-title--caps">Enviroments Created  <a value="New" href="#" style="font-size:10pt;border: 1px solid;background-color: #ff7a3a;" class="slds-button slds-button--brand slds-order--3" target="_blank" onclick="action('new',''); return false;">New</a></legend>
                  <apex:outputPanel id="custoTable"  >
                  	<apex:outputPanel layout="block" rendered="{!testConnectionMessage == 'The connection was successful'}" styleClass="successConnection">
                  		{!testConnectionMessage}
                    </apex:outputPanel>
                    <apex:outputPanel layout="block" rendered="{!testConnectionMessage != '' && testConnectionMessage != 'The connection was successful'}" styleClass="errorConnection">
                  		{!testConnectionMessage}
                    </apex:outputPanel>
                    <script>
                        //jQuery.noConflict();
                        $(document).ready( function () {
                            var contactTable = $('[id$="custable"]').DataTable({
							});
                        });
                    </script>
                    <table id="custable" class="display">
                        <thead>
                            <tr>
                           		<th>Actions</th>
                                <th>Environment Name</th>
                                <th>Username</th>
                                <th>Is Sandbox</th>
                            </tr>
                        </thead>
                        <tbody>
                            <!-- <apex:repeat value="{!customizationLists}" var="listCus"> -->
                            <apex:repeat value="{!credentials}" var="cred">
                                <tr>
                                    <td><a href="#" onclick="action('edit','{!cred.Id}'); return false;">Edit</a> - <a href="#" onclick="action('test','{!cred.Id}');">Test Connection</a><!--  - <a href="#" onclick="action('sync','{!cred.Id}');">Sync</a> - <a href="#" onclick="action('del','{!cred.Id}');">Delete</a> --></td>
                                    <td>{!cred.Custom_Name__c}</td>
                                    <td>{!cred.Username__c}</td>
                                    <td> <apex:inputCheckbox value="{!cred.FLODocs__Sandbox__c}" disabled="true" /> </td>
                                </tr>
                            </apex:repeat>
                            <!-- </apex:repeat> -->
                        </tbody>
                    </table>
                </apex:outputPanel>
        </fieldset>

        <apex:actionFunction action="{!setEnviromenCreds}" name="setCreds" reRender="saveCredsModal" oncomplete="openSaveModal();" status="statusC">
        	<apex:param value="" name="credId" />
        </apex:actionFunction>

        <apex:actionFunction action="{!syncEnviromenCreds}" name="syncCreds" reRender="syncCredsModal" oncomplete="openSyncModal();" status="statusC">
        	<apex:param value="" name="credId" />
        </apex:actionFunction>

        <apex:actionFunction action="{!testConnect}" name="testConn" reRender="custoTable" status="statusC">
        	<apex:param value="" name="credId" />
        </apex:actionFunction>


        <apex:actionFunction action="{!setEnviromentSync}" name="getSyncCreds" reRender="targetBlock" status="statusC"/>
        


        <div class="saveCredsModal" style="display: none;">
			<apex:outputPanel layout="block" id="saveCredsModal">
				<div role="dialog" tabindex="-1" aria-labelledby="header43" class="slds-modal slds-fade-in-open">
					<div class="slds-modal__container">
						<div class="slds-modal__header">
							<button class="slds-button slds-modal__close slds-button--icon-inverse" title="Close" onclick="closeModal(); return false;">
								 X
								<span class="slds-assistive-text">Close</span>
							</button>
							<h2 id="header43" class="slds-text-heading--medium">Edit Credentials</h2>
						</div>
						<div class="slds-modal__content slds-p-around--medium">
							<div class="slds-form-element__row">
								<div class="slds-form-element slds-size--1-of-1">
									<label class="slds-form-element__label" for="input-03">Environment Name: <span class="required">*</span></label><br/>
									<apex:inputText value="{!toSaveCreds.FLODocs__Custom_Name__c}" id="toSaveName" styleClass="slds-input" maxlength="19"/><br/>
									<apex:outputText value="{!credNameError}" rendered="{!credNameError != ''}" style="color:red;"/>
								</div>
							</div>
							<div class="slds-form-element__row">
								<div class="slds-form-element slds-size--1-of-1">
									<label class="slds-form-element__label" for="input-03">Username: <span class="required">*</span></label><br/>
									<apex:inputText value="{!toSaveCreds.FLODocs__Username__c}" id="toSaveUsername" styleClass="slds-input" /><br/>
									<apex:outputText value="{!credUserNameError}" rendered="{!credUserNameError != ''}" style="color:red;"/>
 								</div>
							</div>
							<div class="slds-form-element__row">
								<div class="slds-form-element slds-size--1-of-1">
									<label class="slds-form-element__label" for="input-03">Password: <span class="required">*</span></label><br/>
									<apex:inputSecret value="{!toSaveCreds.FLODocs__Password__c}" styleClass="slds-input" redisplay="true" id="toSavePass"/><br/>
									<apex:outputText value="{!credPasswordError}" rendered="{!credPasswordError != ''}" style="color:red;" />
								</div>
							</div>
							<div class="slds-form-element__row">
								<div class="slds-form-element slds-size--1-of-1">
									<label class="slds-form-element__label" for="input-03">Token: </label><br/>
									<apex:inputSecret value="{!toSaveCreds.FLODocs__Token__c}" styleClass="slds-input" redisplay="true" id="toSaveToken"/><br/>
									<apex:outputText value="{!credTokenError}" rendered="{!credTokenError != ''}" style="color:red;"/>
								</div>
							</div>
							<div class="slds-form-element__row">
								<div class="slds-form-element slds-size--1-of-1">
									<label class="slds-form-element__label" for="input-03">Sandbox: </label>
									<apex:inputCheckbox value="{!toSaveCreds.FLODocs__Sandbox__c}" id="toSaveSand"/>
								</div>
							</div>
						</div>
						<div class="slds-modal__footer">
							<apex:commandButton action="{!saveEnviroment}" value="Save" reRender="saveCredsModal, custoTable" styleClass="slds-button slds-button--brand slds-order--3" oncomplete="closeModalAfterSave()" status="statusC"/>
							<!-- <button class="slds-button slds-button--brand">Save</button> -->
						</div>
					</div>
				</div>
				<div class="slds-backdrop slds-backdrop--open"></div>
				<script>
					function closeModalAfterSave() {
						if ({!closeModal}) {
							$('div.saveCredsModal').hide();
						}
					}
				</script>
			</apex:outputPanel>
		</div>

		<div class="syncCredsModal" style="display: none;">
			<apex:outputPanel layout="block" id="targetBlock">
				<div role="dialog" tabindex="-1" aria-labelledby="header43" class="slds-modal slds-fade-in-open">
					<div class="slds-modal__container">
						<div class="slds-modal__header">
							<button class="slds-button slds-modal__close slds-button--icon-inverse" title="Close" onclick="closeModal(); return false;">
								 X
								<span class="slds-assistive-text">Close</span>
							</button>
							<h2 id="header43" class="slds-text-heading--medium">Sync Credentials</h2>
						</div>
						<div class="slds-modal__content slds-p-around--medium">
						    <apex:outputPanel layout="block" id="sourceMessage" >
								<apex:outputPanel layout="block" rendered="{!sourceLoginMessage != ''}" >	
									{!sourceLoginMessage}
								</apex:outputPanel>
							</apex:outputPanel>
							<br/>
									<apex:outputPanel layout="block" id="remoteSiteMessage">
										<script>
											function createRemoteSite()
											{ 
												// Disable button 
												document.getElementById('createremotesitebtn').disabled = true;
												console.log('{!remoteName}');
												console.log('{!remoteUrl}');
												// Calls the Metdata API from JavaScript to create the Remote Site Setting to permit Apex callouts
												var binding = new XMLHttpRequest();
												var request = 
													'<?xml version="1.0" encoding="utf-8"?>' + 
													'<env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">'+
														'<env:Header>' + 
															'<urn:SessionHeader xmlns:urn="http://soap.sforce.com/2006/04/metadata">' + 
																'<urn:sessionId>{!$Api.Session_ID}</urn:sessionId>' + 
															'</urn:SessionHeader>' + 
														'</env:Header>' + 
														'<env:Body>' +
															'<createMetadata xmlns="http://soap.sforce.com/2006/04/metadata">' + 
																'<metadata xsi:type="RemoteSiteSetting">' + 
																	'<fullName>{!remoteName}</fullName>' + 
																	'<description>{!remoteDescription}</description>' + 
																	'<disableProtocolSecurity>false</disableProtocolSecurity>' + 
																	'<isActive>true</isActive>' + 
																	'<url>https://{!remoteUrl}</url>' +
																'</metadata>' +
															'</createMetadata>' +
														'</env:Body>' + 
													'</env:Envelope>';

												console.log(request);

												binding.open('POST', 'https://{!Host}/services/Soap/m/31.0');
												binding.setRequestHeader('SOAPAction','""');
												binding.setRequestHeader('Content-Type', 'text/xml');
												binding.onreadystatechange = 
													function() { 
														if(this.readyState==4) {
															var parser = new DOMParser();
															var doc  = parser.parseFromString(this.response, 'application/xml');
															var errors = doc.getElementsByTagName('errors');
															var messageText = '';
															for(var errorIdx = 0; errorIdx < errors.length; errorIdx++)
																messageText+= errors.item(errorIdx).getElementsByTagName('message').item(0).innerHTML + '\n';
															displayMetadataResponse(messageText);
														} 
													}
												binding.send(request);
												$('.remoteSiteMessage').hide
											}
										</script>
										<apex:outputPanel layout="block" rendered="{!showRemoteSiteSettingCreation}" styleClass="remoteSiteMessage">
											<h1>Important Message:</h1> 
											<p>In order to utilise the features of Environment Comparison,Sync, and Push between orgs, you need to permit the tool access to the environments to compare. This can be accomplished by adding a <a target="_new" href="http://na1.salesforce.com/help/doc/en/configuring_remoteproxy.htm">Remote Site Setting</a> with this Salesforce Server URL <b>https://{!remoteUrl}</b></p>
											<p> 
												Click the <b>Create Remote Site Setting</b> button to have the tool perform this step for you. 
												<input id="createremotesitebtn" type="button" onclick="createRemoteSite();" value="Create Remote Site Setting"/>
											</p>
										</apex:outputPanel>
									</apex:outputPanel>	
							<div class="slds-form-element__row">
								<apex:outputPanel layout="block" StyleClass="slds-form-element slds-size--1-of-1" id="targetEnvSelect">
									<label class="slds-form-element__label" for="input-03">Saved Environments:</label><br/>
									<apex:selectList value="{!selectedEnviroment}" size="1" styleClass="slds-input" onchange="callforCredsTarget()">
										<apex:selectOptions value="{!savedEnviroments}" />
									</apex:selectList>
								</apex:outputPanel>
							</div>
							<div class="slds-form-element__row">
								<div class="slds-form-element slds-size--1-of-1">
									<label class="slds-form-element__label" for="input-03">Username: <span class="required">*</span></label><br/>
									<apex:inputText value="{!username}" id="targetUsername" styleClass="slds-input"/>
								</div>
							</div>
							<div class="slds-form-element__row">
								<div class="slds-form-element slds-size--1-of-1">
									<label class="slds-form-element__label" for="input-03">Password: <span class="required">*</span></label><br/>
									<apex:inputSecret value="{!password}" styleClass="slds-input" redisplay="true"/>
								</div>
							</div>
							<div class="slds-form-element__row">
								<div class="slds-form-element slds-size--1-of-1">
									<label class="slds-form-element__label" for="input-03">Token: </label><br/>
									<apex:inputSecret value="{!token}" styleClass="slds-input"  redisplay="true"/>
								</div>
							</div>
							<div class="slds-form-element__row">
								<div class="slds-form-element slds-size--1-of-1">
									<label class="slds-form-element__label" for="input-03">Sandbox: </label>
									<apex:inputCheckbox value="{!isSandbox}" />
								</div>
							</div>
							<div class="slds-form-element__row">
								<div class="slds-form-element slds-size--1-of-1">
									<apex:commandButton action="{!testConnection}" value="Test Connection" reRender="remoteSiteMessage,sourceMessage" styleClass="slds-button slds-button--brand slds-order--3"/>
									<!-- <button class="slds-button slds-button--brand" onclick="setTargetCreds(); return false;">
										Save Credentials
									</button> -->
									<!-- <apex:outputPanel layout="block" style="text-align: center; padding: 5px;"> -->
										<!-- <apex:commandButton value="Get Change Requests" action="{!changeRequests}" reRender="crlisti" onclick="openOverlay()" oncomplete="closeOverlay()" styleClass="slds-button slds-button_neutral slds-order--3"/> -->
									<!-- </apex:outputPanel> -->
								</div>
							</div>
						</div>	
					</div>	
				</div>	
				<div class="slds-backdrop slds-backdrop--open"></div>
				<script>
					/*function closeModalAfterSave() {
						if ({!closeModal}) {
							$('div.saveCredsModal').hide();
						}
					}*/
				</script>
			</apex:outputPanel>
		</div>


		<apex:actionStatus id="statusC">
				<apex:facet name="start">
					<div style="position: fixed; top: 0; left: 0; right: 0; bottom: 0; opacity: 0.25; z-index: 1000; background-color: black;">
						&nbsp;
					</div>
					<div style="position: fixed; left: 0; top: 0; bottom: 0; right: 0; z-index: 1001; margin: 15% 50%">
						<div style="display: inline-block; padding: 2px; background-color: #fff; width: 125px;">
							<img src="/img/loading.gif" style="float: left; margin: 8px;" />
							<span style="display: inline-block; padding: 10px 0px;">Please Wait...</span>
						</div>
					</div>
				</apex:facet>
				<apex:facet name="stop"></apex:facet>
		</apex:actionStatus>
        </apex:form>
    </div>

    <script docType="javascript">
    	function action(name,credId){
    		if(name == 'edit'){
    			setCreds(credId);
    		}else if(name == 'sync'){
    			syncCreds(credId);
    		}else if(name == 'test'){
    			testConn(credId);
    		}else if(name == 'new'){
    			$('input[id$=toSaveName]').val('');
    			$('input[id$=toSaveUsername]').val('');
    			$('input[id$=toSavePass]').val('');
    			$('input[id$=toSaveToken]').val('');
				$('input[id$=toSaveSand]').val(false);	
				$('div.saveCredsModal').show();			
    		}
    	} 
    	function openSaveModal() {
			$('div.saveCredsModal').show();
		}

		function openSyncModal(){
			$('div.syncCredsModal').show();	
		}

		function callforCredsTarget(){
			getSyncCreds();
		}
	</script>

</html>
</apex:page>