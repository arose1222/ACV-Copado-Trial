<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Email_Alert_0</name>
        <label>Email Alert</label>
        <locationX>440</locationX>
        <locationY>756</locationY>
        <actionName>Opportunity.Notify_TM_on_opportunity_inactivity_for_7_days</actionName>
        <actionType>emailAlert</actionType>
        <connector>
            <targetReference>Update_email_sent_date_on_opportunity</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>Loop_Opportunity_collection.Id</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <apiVersion>52.0</apiVersion>
    <decisions>
        <name>Check_for_weekends</name>
        <label>Check for weekends</label>
        <locationX>176</locationX>
        <locationY>276</locationY>
        <defaultConnector>
            <targetReference>Fetch_recordtype_records</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Is Weekday</defaultConnectorLabel>
        <rules>
            <name>Is_Weekend</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>DayOfTheWeek</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Saturday</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>DayOfTheWeek</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Sunday</stringValue>
                </rightValue>
            </conditions>
            <label>Is Weekend</label>
        </rules>
    </decisions>
    <formulas>
        <name>DayOfTheWeek</name>
        <dataType>String</dataType>
        <expression>CASE(
	MOD({!$Flow.CurrentDate}- DATE (1900,1,7),7),
	0,&quot;Sunday&quot;,
	1,&quot;Monday&quot;,
	2,&quot;Tuesday&quot;,
	3,&quot;Wednesday&quot;,
	4,&quot;Thursday&quot;,
	5,&quot;Friday&quot;,
	&quot;Saturday&quot;
)</expression>
    </formulas>
    <formulas>
        <name>GapSinceLastInactivityReminder</name>
        <dataType>Date</dataType>
        <expression>Today()-7</expression>
    </formulas>
    <interviewLabel>Opportunity: Recurring inactivity reminder {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Opportunity: Recurring inactivity reminder</label>
    <loops>
        <name>Loop_Opportunity_collection</name>
        <label>Loop Opportunity collection</label>
        <locationX>352</locationX>
        <locationY>636</locationY>
        <collectionReference>Fetch_Opportunity_records</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Email_Alert_0</targetReference>
        </nextValueConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Fetch_Opportunity_records</name>
        <label>Fetch Opportunity records</label>
        <locationX>352</locationX>
        <locationY>516</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Loop_Opportunity_collection</targetReference>
        </connector>
        <filterLogic>1 AND 2 AND (3 OR 4) AND 5 AND 6</filterLogic>
        <filters>
            <field>Days_since_last_activity__c</field>
            <operator>GreaterThanOrEqualTo</operator>
            <value>
                <numberValue>7.0</numberValue>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>True360OppRecordTypeID</elementReference>
            </value>
        </filters>
        <filters>
            <field>Inactivity_reminder_sent_date__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Inactivity_reminder_sent_date__c</field>
            <operator>LessThanOrEqualTo</operator>
            <value>
                <elementReference>GapSinceLastInactivityReminder</elementReference>
            </value>
        </filters>
        <filters>
            <field>StageName</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Closed Won</stringValue>
            </value>
        </filters>
        <filters>
            <field>StageName</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Closed Lost</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Opportunity</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Fetch_recordtype_records</name>
        <label>Fetch recordtype records</label>
        <locationX>352</locationX>
        <locationY>396</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Fetch_Opportunity_records</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Opportunity</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>True360Opportunity</stringValue>
            </value>
        </filters>
        <object>RecordType</object>
        <outputAssignments>
            <assignToReference>True360OppRecordTypeID</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordUpdates>
        <name>Update_email_sent_date_on_opportunity</name>
        <label>Update email sent date on opportunity</label>
        <locationX>440</locationX>
        <locationY>876</locationY>
        <connector>
            <targetReference>Loop_Opportunity_collection</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Loop_Opportunity_collection.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Inactivity_reminder_sent_date__c</field>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </inputAssignments>
        <object>Opportunity</object>
    </recordUpdates>
    <start>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Check_for_weekends</targetReference>
        </connector>
        <schedule>
            <frequency>Daily</frequency>
            <startDate>2021-08-23</startDate>
            <startTime>07:00:00.000Z</startTime>
        </schedule>
        <triggerType>Scheduled</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>True360OppRecordTypeID</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
